generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStates {
  UNVERIFIED
  ACTIVE
  LOCKED
  ADMIN
}

enum VoucherTypes {
  FIXED_VALUE
  PERCENTAGE
}

enum ComplaintStates {
  PENDING
  RESOLVED
}

model User {
  id               String              @id @default(uuid())
  email            String?             @unique
  phoneNumber      Int                 @unique
  name             String?
  username         String
  password         String
  state            UserStates          @default(UNVERIFIED)
  totalSpending    Int                 @default(0)
  ShoppingCart     ShoppingCart[]
  loyaltySettingId Int                 @default(0)
  loyaltySetting   LoyaltySetting      @relation(fields: [loyaltySettingId], references: [id])
  complaints       CustomerComplaint[]
}

enum Category {
  DONG_TRUNG_HA_THAO
  YEN_SAO_THUONG_HANG
  SAFFARON
  NHAN_SAM
  KHAC
}

enum ProductStates {
  AVAILABLE
  SOLD_OUT
  COMING_SOON
}

model Product {
  id           String         @id @default(uuid())
  name         String         @unique
  category     Category
  price        Float
  description  String
  mainImage    String
  images       String[]
  mass         Int
  sold         Int            @default(0)
  state        ProductStates  @default(AVAILABLE)
  ShoppingCart ShoppingCart[]
  origin       String
}

model ShoppingCart {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  items     Json[]
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model LoyaltySetting {
  id              Int     @id @default(autoincrement())
  title           String  @unique
  hasPrivateCard  Boolean @default(false)
  hasBirthdayGift Boolean @default(false)
  hasEventTicket  Boolean @default(false)
  isVip           Boolean @default(false)

  User User[]
}

model CustomerComplaint {
  id      String          @id @default(uuid())
  userId  String
  user    User            @relation(fields: [userId], references: [id])
  content String
  state   ComplaintStates @default(PENDING)
}

model Voucher {
  id       String       @id @default(uuid())
  type     VoucherTypes
  maxValue Int          @default(0)
}
