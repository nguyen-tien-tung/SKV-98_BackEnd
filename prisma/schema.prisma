generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStates {
  UNVERIFIED
  ACTIVE
  LOCKED
  ADMIN
}

enum VoucherTypes {
  FIXED_VALUE
  PERCENTAGE
}

enum ComplaintStates {
  PENDING
  RESOLVED
}

model User {
  id               String              @id @default(uuid())
  email            String?             @unique
  phoneNumber      String              @unique
  name             String?
  username         String              @unique
  password         String
  state            UserStates          @default(UNVERIFIED)
  totalSpending    Int                 @default(0)
  shoppingCart     Json                @default("{}")
  loyaltySettingId Int                 @default(1)
  loyaltySetting   LoyaltySetting      @relation(fields: [loyaltySettingId], references: [id])
  complaints       CustomerComplaint[]
  Order            Order[]
}

enum Category {
  DONG_TRUNG_HA_THAO
  YEN_SAO_THUONG_HANG
  SAFFARON
  NHAN_SAM
  KHAC
}

enum ProductStates {
  AVAILABLE
  SOLD_OUT
  COMING_SOON
}

model Product {
  id          String        @id @default(uuid())
  name        String        @unique
  category    Category
  price       Float
  description String
  mainImage   String
  images      String[]
  mass        Int
  sold        Int           @default(0)
  state       ProductStates @default(AVAILABLE)
  origin      String
}

model LoyaltySetting {
  id              Int     @id @default(autoincrement())
  title           String  @unique
  hasPrivateCard  Boolean @default(false)
  hasBirthdayGift Boolean @default(false)
  hasEventTicket  Boolean @default(false)
  isVip           Boolean @default(false)

  User User[]
}

model CustomerComplaint {
  id      String          @id @default(uuid())
  userId  String
  user    User            @relation(fields: [userId], references: [id])
  content String
  state   ComplaintStates @default(PENDING)
}

model Voucher {
  id       String       @id @default(uuid())
  type     VoucherTypes
  maxValue Int          @default(0)
}

enum PaymentMethods {
  CASH
  BANK_TRANSFER
}

model Order {
  id            String         @id @default(uuid())
  fullName      String
  phoneNumber   String
  address       String
  note          String         @default("")
  paymentMethod PaymentMethods
  userId        String
  user          User           @relation(fields: [userId], references: [id])
}
